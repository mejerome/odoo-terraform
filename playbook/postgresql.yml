---
  - hosts: all
    become: true

    vars:
      postgres_version: "12"

    handlers:
      - name: reload postgresql
        service:
          name: postgresql
          state: reloaded

      - name: reload ufw
        service:
          name: ufw
          state: reloaded

    tasks:
      - name: Install PostgreSQL
        apt:
          name:
            - "postgresql-{{ postgres_version }}"
            - postgresql-client
            - python3-psycopg2
            - acl
          state: present
          update_cache: yes

      - name: Find out if postgres is initialized
        stat:
          path: /var/lib/postgresql/{{ postgres_version }}/main/PG_VERSION
        register: pg_version

      - name: Initialize postgres if not initialized
        shell: "initdb -D /var/lib/postgresql/{{ postgres_version }}/main"
        when: pg_version.stat.exists == false

      - name: Start postgresql
        service:
          name: postgresql
          state: started
          enabled: yes
        
      - name: Create postgresql database
        postgresql_db:
          state: present
          name: odoo_db
        become: true
        become_user: postgres

      - name: Create postgresql user
        postgresql_user:
          state: present
          name: odoo
          password: password
          role_attr_flags: CREATEDB,NOSUPERUSER,LOGIN
        become: true
        become_user: postgres

      - name: Grant postgresql access to odoo database
        postgresql_privs:
          roles: odoo
          type: database
          db: odoo_db
          privs: ALL
        become: true
        become_user: postgres

      - name: change postgres network binding
        lineinfile:
          path: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
          regexp: '# listen_addresses'
          line: "listen_addresses = '*'"

      - name: change postgres pg hba access
        lineinfile:
          path: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
          regexp: 'host    all     all     127.0.0.1/32    md5'
          line: 'host  all      all     0.0.0.0/0     md5'

      - name: Allow md5 connection from 192.168.56.0/24
        postgresql_pg_hba:
          dest: /etc/postgresql/{{ postgres_version }}/main/pg_hba.conf
          contype: host
          databases: "all"
          users: odoo
          source: 0.0.0.0/0
          create: yes
          method: trust
        become: true
        become_user: postgres
        notify: reload postgresql

      - name: Allow all access to tcp port 22
        ufw:
          rule: allow
          port: "{{ item }}"
          proto: tcp
        with_items:
          - "22"
          - "5432"
          - "8080"
            
      - name: Enable ufw
        ufw:
          state: enabled